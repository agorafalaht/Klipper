# This file contains common pin mappings for MKS Robin Nano V3
# boards. To use this config, the firmware should be compiled for the
# stm32f407. When running "make menuconfig", select the 48KiB
# bootloader, and enable "USB for communication".

# The "make flash" command does not work on the MKS Robin. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "Robin_nano_v3.bin" on an SD card and then restart the
# MKS Robin with that SD card.

# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
step_pin: PC14
dir_pin: PC13
enable_pin: !PC15
microsteps: 16
rotation_distance: 40
endstop_pin: PA14
position_endstop: 0
position_max: 235
homing_speed: 50

[tmc2209 stepper_x]
uart_pin: PE6
#diag_pin: 
run_current: 0.700
hold_current: 0.450
stealthchop_threshold: 999999



[stepper_y]
step_pin: PE5
dir_pin: !PE4
enable_pin: !PD14
microsteps: 16
rotation_distance: 40
endstop_pin: PA15
position_endstop: 0
position_max: 235
homing_speed: 50

[tmc2209 stepper_y]
uart_pin: PE3
#diag_pin: 
run_current: 0.700
hold_current: 0.450
stealthchop_threshold: 999999


[stepper_z]
step_pin: PE1
dir_pin: PE0
enable_pin: !PE2
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
#position_endstop: 0.5
position_max: 340
position_min: -8


[tmc2209 stepper_z]
uart_pin: PB7
#diag_pin: 
run_current: 0.800
hold_current: 0.450
stealthchop_threshold: 999999


[probe]
pin: !PB15
#z_offset: 0
speed: 10.0
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.05
samples_tolerance_retries: 1

[safe_z_home]
home_xy_position: 112, 121
speed: 100
z_hop: 10
z_hop_speed: 60

[bed_mesh]
speed: 100
horizontal_move_z: 10
mesh_min: 30,10
mesh_max: 200,210
probe_count: 5,5
fade_start: 1
fade_end: 10
fade_target: 0
mesh_pps: 2,2
algorithm: lagrange
#bicubic_tension: 0.2

[screws_tilt_adjust]
screw1: 52, 31
screw1_name: 1

screw2: 222, 31
screw2_name: 2

screw3: 52, 204
screw3_name: 3

screw4: 222, 204
screw4_name: 4

speed: 150
horizontal_move_z: 10
screw_thread: CW-M4

[gcode_macro SCREWS_CALCULATE]
gcode:
 SCREWS_TILT_CALCULATE

##############
#Acelerometro#
#############

[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None
spi_bus: spidev0.2

[resonance_tester] 

accel_chip: adxl345 
probe_points: 115, 115, 20 # an example

[printer]
kinematics: corexy
max_velocity: 250
max_accel: 4000
max_accel_to_decel: 2000
max_z_velocity: 25
max_z_accel: 100

[input_shaper]
shaper_freq_x: 62.8
shaper_type_x: 2hump_ei
shaper_freq_y: 45.2
shaper_type_y: mzv


[extruder]
step_pin: PB5
dir_pin: PB4
enable_pin: !PB6
microsteps: 16
rotation_distance: 22.7
nozzle_diameter: 0.600
filament_diameter: 1.750
max_extrude_only_distance: 900
gear_ratio: 50:17
max_extrude_cross_section: 50.0
pressure_advance: 0.28
heater_pin: PA3
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC2
#pullup_resistor: 4700
#control: pid
#pid_Kp: 14.669
#pid_Ki: 0.572
#pid_Kd: 94.068
min_temp: 0
max_temp: 260

#[verify_heater extruder]
#max_error: 150
#hysteresis: 10

[tmc2209 extruder]
uart_pin: PB3
#diag_pin: 
run_current: 0.750
hold_current: 0.450
stealthchop_threshold: 0


#[extruder1]
#step_pin: PD15
#dir_pin: !PA1
#enable_pin: !PA3
#heater_pin: PB0
#sensor_pin: PA2
#...

[heater_bed]
heater_pin: PD12
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC0
#pullup_resistor: 4700
#control: pid
#pid_Kp: 325.10
#pid_Ki: 63.35
#pid_Kd: 417.10
min_temp: 0
max_temp: 115


[fan]
pin: PA1 #FAN5015


[heater_fan fan2]
pin: PA2 #Hotend
heater: extruder
heater_temp: 50.0

[heater_fan fan3]
pin: PB0 #MKSPI
heater: extruder
heater_temp: 20.0

[temperature_sensor MKSPI]
## Pi Temps
sensor_type: temperature_host
max_temp: 100


[temperature_sensor mcu_temp]
## Spider Temps
sensor_type: temperature_mcu
max_temp: 100

[mcu] 
restart_method: command
serial: /dev/ttyS0 

###################
#  GCODES MACROS  #
###################


############
# Z OFFSET #
############

[save_variables]
filename: /home/mks/printer_data/config/variables.cfg

[gcode_macro SET_GCODE_OFFSET]
description: Sauvegarde du Z-Offset
rename_existing: _SET_GCODE_OFFSET
gcode:
  {% if printer.save_variables.variables.gcode_offsets %}
  {% set offsets = printer.save_variables.variables.gcode_offsets %}
  {% else %}
  {% set offsets = {'x': None,'y': None,'z': None} %}
  {% endif %}
  {% set ns = namespace(offsets={'x': offsets.x,'y': offsets.y,'z': offsets.z}) %}
  _SET_GCODE_OFFSET {% for p in params %}{'%s=%s '% (p, params[p])}{% endfor %}
  {%if 'X' in params %}{% set null = ns.offsets.update({'x': params.X}) %}{% endif %}
  {%if 'Y' in params %}{% set null = ns.offsets.update({'y': params.Y}) %}{% endif %}
  {%if 'Z' in params %}{% set null = ns.offsets.update({'z': params.Z}) %}{% endif %}
  {%if 'Z_ADJUST' in params %}
  {%if ns.offsets.z == None %}{% set null = ns.offsets.update({'z': 0}) %}{% endif %}
  {% set null = ns.offsets.update({'z': (ns.offsets.z | float) + (params.Z_ADJUST | float)}) %}
  {% endif %}
  SAVE_VARIABLE VARIABLE=gcode_offsets VALUE="{ns.offsets}"

[delayed_gcode LOAD_GCODE_OFFSETS]
initial_duration: 2
gcode:
  {% if printer.save_variables.variables.gcode_offsets %}
  {% set offsets = printer.save_variables.variables.gcode_offsets %}
  _SET_GCODE_OFFSET {% for axis, offset in offsets.items() if offsets[axis] %}{ "%s=%s " % (axis, offset) }{% endfor %}
  { action_respond_info("Loaded gcode offsets from saved variables [%s]" % (offsets)) }
  {% endif %}




[virtual_sdcard]
path: /home/mks/printer_data/gcodes

[include macros.cfg]

[display_status]

###################
# FILAMENT RUNOUT #
###################

[filament_switch_sensor filament_sensor]
switch_pin:PA13 #J33
pause_on_runout: false #pause handled by macro
runout_gcode:
  M600 #calls a macro with the name M600 (so it can be called by slicers too)
insert_gcode:
  M117 Filament inserted #just a throwaway GCode command to have something in this space. You can add your own.
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
event_delay: 3.0
pause_delay: 0.0001

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PC5,  EXP1_3=PD13, EXP1_5=PE14, EXP1_7=PD11, EXP1_9=<GND>,
    EXP1_2=PE13, EXP1_4=PC6,  EXP1_6=PE15, EXP1_8=PD10, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=PA6, EXP2_3=PE8, EXP2_5=PE11, EXP2_7=PE12,  EXP2_9=<GND>,
    EXP2_2=PA5, EXP2_4=PE10, EXP2_6=PA7, EXP2_8=<RST>, EXP2_10=<3.3v>
    # Pins EXP2_1, EXP2_6, EXP2_2 are also MISO, MOSI, SCK of bus "ssp1"

# See the MKS Lcd Config path file for definitions of common LCD displays.

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 24.535
#*# pid_ki = 1.474
#*# pid_kd = 102.128
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 70.031
#*# pid_ki = 1.394
#*# pid_kd = 879.769
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.017500, 0.062500, 0.060000, 0.022500, 0.050000
#*# 	  0.047500, 0.017500, 0.042500, 0.017500, 0.050000
#*# 	  0.022500, 0.020000, 0.025000, 0.002500, 0.060000
#*# 	  0.037500, 0.032500, 0.037500, 0.002500, 0.060000
#*# 	  0.102500, 0.070000, 0.035000, -0.012500, 0.030000
#*# tension = 0.2
#*# min_x = 30.0
#*# algo = lagrange
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 10.0
#*# x_count = 5
#*# max_y = 210.0
#*# mesh_x_pps = 2
#*# max_x = 200.0
#*#
#*# [probe]
#*# z_offset = 2.125
